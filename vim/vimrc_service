" 关闭vi兼容
set nocompatible

" =====基础配置=====

filetype plugin indent on

set fileencodings=ucs-bom,utf-8,gbk,gb18030,big5,euc-jp,latin1
set encoding=utf-8
set termencoding=utf-8
set autoread
set nobackup
set noswapfile
set hidden
set completeopt-=preview
set history=2000
set wildmenu
set wildmode=longest:full,full
set wildignore+=*.swp,*.pyc,*.pyo,.idea,.git
let &wildcharm = &wildchar
cnoremap <expr> / wildmenumode() ? "\<Down>" : "/"

set laststatus=2
set ruler
set showcmd

set relativenumber number
augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &number | set relativenumber   | endif
  autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &number | set norelativenumber | endif
augroup END

set nowrap
set cursorline
set lazyredraw
set ttyfast
set nofoldenable
set list
set listchars=tab:>-,trail:·,nbsp:·
set splitbelow
set splitright
set scrolloff=10
set sidescroll=1
set sidescrolloff=10
set hlsearch
set incsearch
set ignorecase
set smartcase
set backspace=2
set cindent
set autoindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab
set shiftround

autocmd FileType javascript,json,yaml,sh,vim setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4
autocmd FileType proto setlocal tabstop=4 shiftwidth=4 softtabstop=4
autocmd FileType git setlocal foldenable
autocmd FileType markdown setlocal wrap

" =====其他=====

" 打开自动定位到最后编辑的位置
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | execute "normal! g'\"" | endif

" =====快捷键=====

" 定义<Leader>
let mapleader=";"
noremap <Space> ;

" 废弃快捷键
noremap <F1> <Nop>
inoremap <F1> <Nop>
" noremap q <Nop>
" noremap Q <Nop>
noremap K <Nop>

" 快速保存及退出
nnoremap <Leader>q :q<CR>
nnoremap <Leader>w :w<CR>
" w!!用sudo保存
cabbrev w!! w !sudo tee > /dev/null %

" 切换布局快捷键
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" jump list
nnoremap <expr> j (v:count > 1 ? "m'" . v:count : '') . 'j'
nnoremap <expr> k (v:count > 1 ? "m'" . v:count : '') . 'k'

" 替换行首行尾快捷键
noremap H ^
noremap L g_

" 命令行模式增强
cnoremap <C-N> <Down>
cnoremap <C-P> <Up>
cnoremap <C-A> <Home>
cnoremap <C-E> <End>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <C-D> <Del>

"插入模式增强
inoremap <C-A> <Home>
inoremap <C-E> <End>
inoremap <C-F> <Right>
inoremap <C-B> <Left>
inoremap <C-D> <Del>

" 搜索关键词居中
nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> <C-o> <C-o>zz
nnoremap <silent> <C-i> <C-i>zz
nnoremap <silent> <C-]> <C-]>zz

nnoremap <silent><Backspace> :nohlsearch<CR>

" 调整缩进后自动选中
vnoremap < <gv
vnoremap > >gv

" 复制当前行号
nnoremap <silent> <C-g> :let @+ = join([expand('%'),  line(".")], ':')\|:echo @+<CR>

" ----- star_search -----

function! s:StarSearch()
  let cword = expand("<cword>")

  if strlen(cword) == 0
    return
  endif

  if cword[0] =~ '\<'
    let @/ = '\<' . cword . '\>'
  else
    let @/ = cword
  endif

  set hlsearch
endfunction

function! s:VStarSearch()
  let savedS = @s
  normal! gv"sy
  let @/ = '\V' . substitute(escape(@s, '\'), '\n', '\\n', 'g')
  let @s = savedS
  set hlsearch
endfunction

nnoremap <silent> * :set nohlsearch\|:call <SID>StarSearch()<CR>
vnoremap <silent> * :<C-u>set nohlsearch\|:call <SID>VStarSearch()<CR>

" ----- start_search end -----

" =====主题=====

" 高亮
syntax enable
" 背景颜色
set background=dark
" 主题
colorscheme desert
